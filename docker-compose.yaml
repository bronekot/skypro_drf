services:
  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      celery:
        condition: service_started
      celery-beat:
        condition: service_started
    environment:
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    env_file:
      - .env

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  celery:
    build: .
    command: celery -A config worker -l info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env


  celery-beat:
    build: .
    command: celery -A config beat -l info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env

volumes:
  postgres_data: